{
	"compiler": {
		"command": "glslangValidator -V -S {stage}",
		"commandPaths": [ "$VULKAN_SDK/Bin/", "$VULKAN_SDK_DIR/Bin/", "C:/VulkanSDK/1.3.250.0/Bin", "C:/VulkanSDK/1.2.162.1/Bin" ],
		"stages": {
			"vertex": "vert",
			"geometry": "geom",
			"pixel": "frag",
			"compute": "comp"
		}
	},
	"api": "Vulkan",
	"defaultOptions": "-Os",
	"outputExtension": "spirv",
	"sourceExtension": "glsl",
	"outputOption": "-o ",
	"includeOption": "",
	"entryPointOption": "--entry-point {name} --source-entrypoint main",
	"debugOption": "-g -Od",
	"multiplePixelOutputFormats": false,
	"define": {
		"SFX_TYPED_UAV_LOADS": "1",
		"GLSL": "1",
		"SFX_VULKAN": "1"
	},
	"generateSlots": true,
	"sharedSlots": false,
	"lineDirectiveFilenames": true,
	"passThroughSamplers": true,
	"combineTexturesSamplers": true,
	"combineInShader": true,
	"reverseTexCoordY": false,
	"reverseVertexOutputY": true,
	"failOnCerr": true,
	"getSizeExpression": "ivec{dim:{textureName}} {tempName} = textureSize({textureName}{args});\n",
	"getRWSizeExpression": "ivec{return_size} {tempName} = imageSize({textureName}{args});\n",
	"textureDeclaration": "layout(binding = {slot}) uniform {type} {name};",
	"imageDeclaration": "layout({fqualifier},binding={slot}) uniform {type} {name};",
	"imageDeclarationWriteOnly": "writeonly layout(binding={slot}) uniform {type} {name};",
	"samplerDeclaration": "layout(binding = {slot}) uniform {type} {name};",
	"samplingSyntax": "{command}({samplerType}({textureSampler}),{otherParams})",
	"loadSyntax": "{command}({texture},{params})",
	"storeSyntax": "imageStore({varName},ivec{tex_dimension}({index}),{cast}({assignment_exp}))",
	"structDeclaration": "struct {name}\n{\n[\t{type} {name};]};",
	"constantBufferDeclaration": "layout(std140, binding = {slot}) uniform {name}\n{\n[\t{type} {name};]};",
	"inputDeclaration": "layout(location ={slot}) in Block\n{\n[{type} {name};]} ioblock;",
	"vertexInputDeclaration": "[layout(location={slot}) in {type} {name};]",
	"outputDeclaration": "layout(location ={slot}) out Block\n{\n[{type} {name};]} ioblock;",
	"pixelOutputDeclaration": "[layout(location = {slot}) out {type} {name};]",
	"pixelOutputDeclarationDSB": "[layout(location = {slot}, index = {id}) out {type} {name};]",
	"compilerMessageRegex": [ "(ERROR|WARNING):[\\S]*(.*):[\\S]*([0-9]+)[\\S]*:[ ]*(.*)", "$2($3): $1: $4" ],
	"preamble": "#version 450\n#extension GL_GOOGLE_cpp_style_line_directive : enable\n#extension GL_EXT_samplerless_texture_functions : enable\n#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable\n#extension GL_EXT_shader_explicit_arithmetic_types_int16 : enable\n",
	"computePreamble": "#extension GL_ARB_compute_shader : enable\n#extension GL_ARB_shader_image_load_store : enable\n",
	"vertexSemantics": {
		"SV_VertexId": "gl_VertexIndex",
		"SV_VertexID": "gl_VertexIndex",
		"SV_InstanceId": "gl_InstanceIndex",
		"SV_POSITION": "gl_Position",
		"SV_ViewID": "gl_ViewIndex",
		"SV_ViewId": "gl_ViewIndex"
	},
	"pixelSemantics": {
		"SV_IsFrontFace": "gl_FrontFacing",
		"SV_ViewID": "gl_ViewIndex",
		"SV_ViewId": "gl_ViewIndex"
	},
	"vertexOutputAssignment": {
		"SV_POSITION": "gl_Position"
	},
	"fragmentOutputAssignment": {
		"SV_TARGET": "gl_FragColor"
	},
	"computeSemantics": {
		"SV_GroupID": "gl_WorkGroupID",
		"SV_GroupThreadID": "gl_LocalInvocationID",
		"SV_DispatchThreadID": "gl_GlobalInvocationID"
	},
	"toImageFormat": {
		"vec4": "rgba32f",
		"char4": "rgba8_snorm",
		"uchar4": "rgba8",
		"ivec4": "rgba32i",
		"uint": "r32ui",
		"float": "r32f",
		"float4": "rgba32f",
		"f16vec4": "rgba16f"
	},
	"toImageType": {
		"vec4": "image",
		"char4": "image",
		"uchar4": "image",
		"ivec2": "iimage",
		"ivec3": "iimage",
		"ivec4": "iimage",
		"uint": "uimage",
		"uvec2": "uimage",
		"uvec3": "uimage",
		"uvec4": "uimage",
		"float": "image",
		"float4": "image",
		"f16vec4": "image"
	},
	"toTextureType": {
		"default": "sampler",
		"vec4": "sampler",
		"char4": "sampler",
		"uchar4": "sampler",
		"ivec2": "isampler",
		"ivec3": "isampler",
		"ivec4": "isampler",
		"uint": "usampler",
		"uvec2": "usampler",
		"uvec3": "usampler",
		"uvec4": "usampler",
		"float": "sampler",
		"float4": "sampler",
		"half4": "sampler",
		"f16vec4": "sampler"
	},
	"templateTypes": {
		"Texture2D<uint>": "utexture2D",
		"Texture2D<uvec2>": "utexture2D",
		"Texture2D<uvec3>": "utexture2D",
		"Texture2D<uvec4>": "utexture2D",
		"Texture2D<int>": "itexture2D",
		"Texture2D<ivec2>": "itexture2D",
		"Texture2D<ivec3>": "itexture2D",
		"Texture2D<ivec4>": "itexture2D"
	},
	"computeLayout": "layout(local_size_x=$1,local_size_y=$2,local_size_z=$3) in;",
	"structuredBufferDeclaration": "layout(std430,binding={slot})buffer {name}\n{\n\t{content} \n};",
	"replace": {
		"SV_VertexId": "S_VERTEX_ID",
		"SV_POSITION": "S_POSITION",
		"SV_COVERAGE": "S_COVERAGE",
		"SV_TARGET": "S_TARGET_OUTPUT",
		"SV_TARGET0": "S_TARGET_OUTPUT0",
		"SV_TARGET1": "S_TARGET_OUTPUT1",
		"SV_TARGET2": "S_TARGET_OUTPUT2",
		"SV_TARGET3": "S_TARGET_OUTPUT3",
		"SV_TARGET4": "S_TARGET_OUTPUT4",
		"SV_TARGET5": "S_TARGET_OUTPUT5",
		"SV_TARGET6": "S_TARGET_OUTPUT6",
		"SV_TARGET7": "S_TARGET_OUTPUT7",
		"SV_DISPATCHTHREADID": "S_DISPATCH_THREAD_ID",
		"SV_GROUPTHREADID": "S_GROUP_THREAD_ID",
		"SV_GROUPID": "S_GROUP_ID",
		"SV_DEPTH": "S_DEPTH_OUTPUT",
		"SV_VertexID": "S_VERTEX_ID",
		"SV_Position": "S_POSITION",
		"SV_Coverage": "S_COVERAGE",
		"POSITION": "S_POSITION",
		"groupshared": "shared",
		"GroupMemoryBarrier": "ThreadGroupMemoryBarrier",
		"GroupMemoryBarrierWithGroupSync": "barrier",
		"SV_DispatchThreadID": "S_DISPATCH_THREAD_ID",
		"SV_GroupThreadID": "S_GROUP_THREAD_ID",
		"SV_GroupID": "S_GROUP_ID",
		"SV_Target": "S_TARGET_OUTPUT",
		"SV_ViewID": "gl_ViewIndex",
		"SV_ViewId": "gl_ViewIndex",
		"SV_RenderTargetArrayIndex": "gl_Layer",
		"SV_ViewportArrayIndex": "gl_ViewportIndex",
		"ivec1": "int",
		"int2": "ivec2",
		"int3": "ivec3",
		"int4": "ivec4",
		"uivec3": "ivec3",
		"uint2": "uvec2",
		"uint3": "uvec3",
		"uint4": "uvec4",
		"float2": "vec2",
		"float3": "vec3",
		"float4": "vec4",
		"SamplerState": "sampler",
		"Texture1D": "texture1D",
		"Texture2D": "texture2D",
		"Texture3D": "texture3D",
		"TextureCube": "textureCube",
		"TextureCubeArray": "textureCubeArray",
		"Texture2DArray": "texture2DArray",
		"Texture2DMS": "texture2DMS",
		"RWTexture3D": "image3D",
		"RWTexture2D": "image2D",
		"RWTexture1D": "image1D",
		"RWTexture2DArray": "image2DArray",
		"uiRWTexture3D": "uimage3D",
		"iRWTexture3D": "iimage3D",
		"uiRWTexture2DArray": "uimage2DArray",
		"Sample": "texture",
		"SampleLevel": "textureLod",
		"Load": "imageLoad",
		"IMAGESTORE(a,b,c)": "imageStore(a,b,c);",
		"imageStore(uav,pos, c)": "imageStore(uav,pos,c)",
		"lerp": "mix",
		"atan2": "atan",
		"frac": "fract",
		"flat": ""
	}
}